// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MobileMeny test Matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileMenu
    activeMenuClass="forecast"
    showForecastHandler={[MockFunction]}
    showSearchHandler={[MockFunction]}
    showSettingsHandler={[MockFunction]}
    text={
      Object {
        "forecast": "Pogoda",
        "geo": "Geo",
        "geoFull": "Geolokalizacja",
        "icon": "Ikona",
        "inputPlaceholder": "Szukaj lokalizacji",
        "search": "Szukaj",
        "settings": "Ustawienia",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="setting"
          onClick={[MockFunction]}
          type="button"
        >
          <span
            className="hidden"
          >
            Szukaj
          </span>
          <Icon
            icon="search"
            title=""
            viewBox="0 0 50 50"
          />
          <span>
            Szukaj
          </span>
        </button>,
        <button
          className="active setting"
          onClick={[MockFunction]}
          type="button"
        >
          <span
            className="hidden"
          >
            Pogoda
          </span>
          <Icon
            icon="sun"
            title=""
            viewBox="0 0 50 50"
          />
          <span>
            Pogoda
          </span>
        </button>,
        <button
          className="setting"
          onClick={[MockFunction]}
          type="button"
        >
          <span
            className="hidden"
          />
          <Icon
            icon="settings"
            title=""
            viewBox="0 0 50 50"
          />
          <span>
            Ustawienia
          </span>
        </button>,
      ],
      "className": "MobileMenu",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="hidden"
            >
              Szukaj
            </span>,
            <Icon
              icon="search"
              title=""
              viewBox="0 0 50 50"
            />,
            <span>
              Szukaj
            </span>,
          ],
          "className": "setting",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Szukaj",
              "className": "hidden",
            },
            "ref": null,
            "rendered": "Szukaj",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "icon": "search",
              "title": "",
              "viewBox": "0 0 50 50",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Szukaj",
            },
            "ref": null,
            "rendered": "Szukaj",
            "type": "span",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="hidden"
            >
              Pogoda
            </span>,
            <Icon
              icon="sun"
              title=""
              viewBox="0 0 50 50"
            />,
            <span>
              Pogoda
            </span>,
          ],
          "className": "active setting",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Pogoda",
              "className": "hidden",
            },
            "ref": null,
            "rendered": "Pogoda",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "icon": "sun",
              "title": "",
              "viewBox": "0 0 50 50",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Pogoda",
            },
            "ref": null,
            "rendered": "Pogoda",
            "type": "span",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="hidden"
            />,
            <Icon
              icon="settings"
              title=""
              viewBox="0 0 50 50"
            />,
            <span>
              Ustawienia
            </span>,
          ],
          "className": "setting",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "hidden",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "icon": "settings",
              "title": "",
              "viewBox": "0 0 50 50",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ustawienia",
            },
            "ref": null,
            "rendered": "Ustawienia",
            "type": "span",
          },
        ],
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="setting"
            onClick={[MockFunction]}
            type="button"
          >
            <span
              className="hidden"
            >
              Szukaj
            </span>
            <Icon
              icon="search"
              title=""
              viewBox="0 0 50 50"
            />
            <span>
              Szukaj
            </span>
          </button>,
          <button
            className="active setting"
            onClick={[MockFunction]}
            type="button"
          >
            <span
              className="hidden"
            >
              Pogoda
            </span>
            <Icon
              icon="sun"
              title=""
              viewBox="0 0 50 50"
            />
            <span>
              Pogoda
            </span>
          </button>,
          <button
            className="setting"
            onClick={[MockFunction]}
            type="button"
          >
            <span
              className="hidden"
            />
            <Icon
              icon="settings"
              title=""
              viewBox="0 0 50 50"
            />
            <span>
              Ustawienia
            </span>
          </button>,
        ],
        "className": "MobileMenu",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="hidden"
              >
                Szukaj
              </span>,
              <Icon
                icon="search"
                title=""
                viewBox="0 0 50 50"
              />,
              <span>
                Szukaj
              </span>,
            ],
            "className": "setting",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Szukaj",
                "className": "hidden",
              },
              "ref": null,
              "rendered": "Szukaj",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "icon": "search",
                "title": "",
                "viewBox": "0 0 50 50",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Szukaj",
              },
              "ref": null,
              "rendered": "Szukaj",
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="hidden"
              >
                Pogoda
              </span>,
              <Icon
                icon="sun"
                title=""
                viewBox="0 0 50 50"
              />,
              <span>
                Pogoda
              </span>,
            ],
            "className": "active setting",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Pogoda",
                "className": "hidden",
              },
              "ref": null,
              "rendered": "Pogoda",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "icon": "sun",
                "title": "",
                "viewBox": "0 0 50 50",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Pogoda",
              },
              "ref": null,
              "rendered": "Pogoda",
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="hidden"
              />,
              <Icon
                icon="settings"
                title=""
                viewBox="0 0 50 50"
              />,
              <span>
                Ustawienia
              </span>,
            ],
            "className": "setting",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "hidden",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "icon": "settings",
                "title": "",
                "viewBox": "0 0 50 50",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Ustawienia",
              },
              "ref": null,
              "rendered": "Ustawienia",
              "type": "span",
            },
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
