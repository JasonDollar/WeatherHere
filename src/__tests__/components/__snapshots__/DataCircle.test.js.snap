// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataCircle test DataCircle comp. with humidity data (works for most types) Data Circle humidity snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DataCircle
    additionalData={null}
    data={94}
    text={
      Object {
        "appTemp": "Temperatura odczuwalna",
        "cloudCov": "Zachmurzenie",
        "date": "Data",
        "dewPoint": "Punkt rosy",
        "humidity": "Wilgotność",
        "icon": "Ikona pogody",
        "location": "Nieznana lokacja",
        "moon": Array [
          "Nów",
          "Wschodzący sierp",
          "Pierwsza kwadra",
          "Wschodzący księżyc",
          "Pełnia",
          "Ubywający księżyc",
          "Trzecia kwadra",
          "Ubywający sierp",
        ],
        "moonphase": "Faza księżyca",
        "ozone": "Ozon",
        "precipInt": "Intensywność opadu",
        "precipProb": "Opady",
        "precipType": "Rodzaj opadu",
        "pressure": "Ciśnienie",
        "sun": "Słońce",
        "sunrise": "Wschód słońca",
        "sunset": "Zachód słońca",
        "today": "Dziś",
        "uvIndex": "Indeks UV",
        "visibility": "Widoczność",
        "wind": "Wiatr",
        "windGust": "Wiatr w porywach",
      }
    }
    type="Wilgotność"
    unit="%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dataColor"
          style={
            Object {
              "background": "conic-gradient( 0%,  50%, 94%,  94%,  94% 100%)",
            }
          }
        />,
        <div
          className="dataFront"
        />,
        <div
          className="dataContainer"
        >
          <span>
            94%
          </span>
          <span>
            Wilgotność
          </span>
        </div>,
      ],
      "className": "DataCircle humidity",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "dataColor",
          "style": Object {
            "background": "conic-gradient( 0%,  50%, 94%,  94%,  94% 100%)",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "dataFront",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            null,
            <span>
              94%
            </span>,
            <span>
              Wilgotność
            </span>,
          ],
          "className": "dataContainer",
        },
        "ref": null,
        "rendered": Array [
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "94%",
            },
            "ref": null,
            "rendered": "94%",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Wilgotność",
            },
            "ref": null,
            "rendered": "Wilgotność",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dataColor"
            style={
              Object {
                "background": "conic-gradient( 0%,  50%, 94%,  94%,  94% 100%)",
              }
            }
          />,
          <div
            className="dataFront"
          />,
          <div
            className="dataContainer"
          >
            <span>
              94%
            </span>
            <span>
              Wilgotność
            </span>
          </div>,
        ],
        "className": "DataCircle humidity",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dataColor",
            "style": Object {
              "background": "conic-gradient( 0%,  50%, 94%,  94%,  94% 100%)",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dataFront",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              <span>
                94%
              </span>,
              <span>
                Wilgotność
              </span>,
            ],
            "className": "dataContainer",
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "94%",
              },
              "ref": null,
              "rendered": "94%",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Wilgotność",
              },
              "ref": null,
              "rendered": "Wilgotność",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DataCircle test DataCircle comp. with wind data Data Circle wind snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DataCircle
    additionalData={99}
    data={5.7}
    text={
      Object {
        "appTemp": "Temperatura odczuwalna",
        "cloudCov": "Zachmurzenie",
        "date": "Data",
        "dewPoint": "Punkt rosy",
        "humidity": "Wilgotność",
        "icon": "Ikona pogody",
        "location": "Nieznana lokacja",
        "moon": Array [
          "Nów",
          "Wschodzący sierp",
          "Pierwsza kwadra",
          "Wschodzący księżyc",
          "Pełnia",
          "Ubywający księżyc",
          "Trzecia kwadra",
          "Ubywający sierp",
        ],
        "moonphase": "Faza księżyca",
        "ozone": "Ozon",
        "precipInt": "Intensywność opadu",
        "precipProb": "Opady",
        "precipType": "Rodzaj opadu",
        "pressure": "Ciśnienie",
        "sun": "Słońce",
        "sunrise": "Wschód słońca",
        "sunset": "Zachód słońca",
        "today": "Dziś",
        "uvIndex": "Indeks UV",
        "visibility": "Widoczność",
        "wind": "Wiatr",
        "windGust": "Wiatr w porywach",
      }
    }
    type="Wiatr"
    unit="m/s"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dataColor"
          style={
            Object {
              "background": "conic-gradient( 0%,  5.7%,  5.7% 100%)",
            }
          }
        />,
        <div
          className="dataFront"
        />,
        <div
          className="dataContainer"
        >
          <div
            className="bigArrow"
            style={
              Object {
                "transform": "rotate(9deg)",
              }
            }
          >
            <Icon
              icon="arrow"
              title="icon"
              viewBox="0 0 24 24"
            />
          </div>
          <span>
            5.7m/s
          </span>
          <span>
            Wiatr
          </span>
        </div>,
      ],
      "className": "DataCircle undefined",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "dataColor",
          "style": Object {
            "background": "conic-gradient( 0%,  5.7%,  5.7% 100%)",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "dataFront",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="bigArrow"
              style={
                Object {
                  "transform": "rotate(9deg)",
                }
              }
            >
              <Icon
                icon="arrow"
                title="icon"
                viewBox="0 0 24 24"
              />
            </div>,
            <span>
              5.7m/s
            </span>,
            <span>
              Wiatr
            </span>,
          ],
          "className": "dataContainer",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                icon="arrow"
                title="icon"
                viewBox="0 0 24 24"
              />,
              "className": "bigArrow",
              "style": Object {
                "transform": "rotate(9deg)",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "icon": "arrow",
                "title": "icon",
                "viewBox": "0 0 24 24",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "5.7m/s",
            },
            "ref": null,
            "rendered": "5.7m/s",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Wiatr",
            },
            "ref": null,
            "rendered": "Wiatr",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dataColor"
            style={
              Object {
                "background": "conic-gradient( 0%,  5.7%,  5.7% 100%)",
              }
            }
          />,
          <div
            className="dataFront"
          />,
          <div
            className="dataContainer"
          >
            <div
              className="bigArrow"
              style={
                Object {
                  "transform": "rotate(9deg)",
                }
              }
            >
              <Icon
                icon="arrow"
                title="icon"
                viewBox="0 0 24 24"
              />
            </div>
            <span>
              5.7m/s
            </span>
            <span>
              Wiatr
            </span>
          </div>,
        ],
        "className": "DataCircle undefined",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dataColor",
            "style": Object {
              "background": "conic-gradient( 0%,  5.7%,  5.7% 100%)",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dataFront",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="bigArrow"
                style={
                  Object {
                    "transform": "rotate(9deg)",
                  }
                }
              >
                <Icon
                  icon="arrow"
                  title="icon"
                  viewBox="0 0 24 24"
                />
              </div>,
              <span>
                5.7m/s
              </span>,
              <span>
                Wiatr
              </span>,
            ],
            "className": "dataContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Icon
                  icon="arrow"
                  title="icon"
                  viewBox="0 0 24 24"
                />,
                "className": "bigArrow",
                "style": Object {
                  "transform": "rotate(9deg)",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "icon": "arrow",
                  "title": "icon",
                  "viewBox": "0 0 24 24",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "5.7m/s",
              },
              "ref": null,
              "rendered": "5.7m/s",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Wiatr",
              },
              "ref": null,
              "rendered": "Wiatr",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
