// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hourly component test Matches snapshot 1`] = `
<section
  className="Hourly"
>
  <Summary>
    Duże zachmurzenie w ciągu dnia, nocą słaby wiatr, skończy się jutro rano.
  </Summary>
  <div
    className="chartContainer"
  >
    <ResponsiveContainer
      debounce={0}
      height={300}
      width="100%"
    >
      <LineChart
        barCategoryGap="10%"
        barGap={4}
        data={
          Array [
            Object {
              "Temperatura (°C)": 9,
              "summary": "Średnie zachmurzenie",
              "time": "18:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 11.2,
              "summary": "Średnie zachmurzenie",
              "time": "21:00",
              "undefined": 3,
            },
            Object {
              "Temperatura (°C)": 12.7,
              "summary": "Średnie zachmurzenie",
              "time": "00:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 13.7,
              "summary": "Słaby wiatr, duże zachmurzenie",
              "time": "03:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 14.2,
              "summary": "Umiarkowany wiatr, duże zachmurzenie",
              "time": "06:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 16.5,
              "summary": "Słaby wiatr, duże zachmurzenie",
              "time": "09:00",
              "undefined": 4,
            },
            Object {
              "Temperatura (°C)": 18.9,
              "summary": "Duże zachmurzenie",
              "time": "12:00",
              "undefined": 11,
            },
            Object {
              "Temperatura (°C)": 17.7,
              "summary": "Duże zachmurzenie",
              "time": "15:00",
              "undefined": 4,
            },
            Object {
              "Temperatura (°C)": 15.5,
              "summary": "Duże zachmurzenie",
              "time": "18:00",
              "undefined": 2,
            },
            Object {
              "Temperatura (°C)": 13.6,
              "summary": "Niewielkie zachmurzenie",
              "time": "21:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 12.6,
              "summary": "Bezchmurnie",
              "time": "00:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 11.6,
              "summary": "Bezchmurnie",
              "time": "03:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 9.1,
              "summary": "Niewielkie zachmurzenie",
              "time": "06:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 11,
              "summary": "Bezchmurnie",
              "time": "09:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 15.2,
              "summary": "Bezchmurnie",
              "time": "12:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 14.8,
              "summary": "Bezchmurnie",
              "time": "15:00",
              "undefined": 0,
            },
            Object {
              "Temperatura (°C)": 11.8,
              "summary": "Bezchmurnie",
              "time": "18:00",
              "undefined": 0,
            },
          ]
        }
        layout="horizontal"
        margin={
          Object {
            "bottom": 5,
            "left": 5,
            "right": 5,
            "top": 5,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
      >
        <CartesianGrid
          fill="none"
          horizontal={true}
          horizontalFill={Array []}
          horizontalPoints={Array []}
          stroke="#ccc"
          strokeDasharray="3 3"
          vertical={true}
          verticalFill={Array []}
          verticalPoints={Array []}
        />
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          dataKey="time"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={30}
          hide={false}
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          stroke=""
          tickCount={5}
          type="category"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          domain={
            Array [
              "auto",
              "auto",
            ]
          }
          height={0}
          hide={false}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 0,
              "top": 0,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "stroke": "",
            }
          }
          tickCount={5}
          type="number"
          width={60}
          yAxisId="left"
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          domain={
            Array [
              0,
              100,
            ]
          }
          height={0}
          hide={false}
          mirror={false}
          orientation="right"
          padding={
            Object {
              "bottom": 0,
              "top": 0,
            }
          }
          reversed={false}
          scale="auto"
          tick={
            Object {
              "stroke": "",
            }
          }
          tickCount={5}
          type="number"
          width={60}
          yAxisId="right"
        />
        <Tooltip
          active={false}
          animationDuration={400}
          animationEasing="ease"
          content={
            <CustomTooltip
              tempText={
                Object {
                  "temperature": "Temperatura",
                  "temperatureMax": "Temperatura Max.",
                  "temperatureMin": "Temperatura Min.",
                  "today": "Dziś",
                  "weekDay": Array [
                    "Niedziela",
                    "Poniedziałek",
                    "Wtorek",
                    "Środa",
                    "Czwartek",
                    "Piątek",
                    "Sobota",
                    "Dziś",
                  ],
                  "weekDayShort": Array [
                    "Nie",
                    "Pon",
                    "Wt",
                    "Śr",
                    "Czw",
                    "Pt",
                    "Sob",
                  ],
                }
              }
              type="hourly"
              units="si"
            />
          }
          contentStyle={Object {}}
          coordinate={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          cursor={true}
          cursorStyle={Object {}}
          filterNull={true}
          isAnimationActive={true}
          itemSorter={[Function]}
          itemStyle={Object {}}
          labelStyle={Object {}}
          offset={10}
          separator=" : "
          useTranslate3d={false}
          viewBox={
            Object {
              "x1": 0,
              "x2": 0,
              "y1": 0,
              "y2": 0,
            }
          }
          wrapperStyle={Object {}}
        />
        <Legend
          align="center"
          iconSize={14}
          layout="vertical"
          verticalAlign="bottom"
        />
        <Line
          activeDot={
            Object {
              "r": 8,
            }
          }
          animateNewValues={true}
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dataKey="Temperatura (°C)"
          dot={true}
          fill="#fff"
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          points={Array []}
          stroke=""
          strokeWidth={1}
          type="monotone"
          xAxisId={0}
          yAxisId="left"
        />
        <Line
          activeDot={true}
          animateNewValues={true}
          animationBegin={0}
          animationDuration={1500}
          animationEasing="ease"
          connectNulls={false}
          dot={true}
          fill="#fff"
          hide={false}
          isAnimationActive={true}
          legendType="line"
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          points={Array []}
          stroke=""
          strokeWidth={1}
          type="monotone"
          xAxisId={0}
          yAxisId="right"
        />
      </LineChart>
    </ResponsiveContainer>
  </div>
</section>
`;
